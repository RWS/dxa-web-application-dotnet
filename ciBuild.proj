<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.5" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Remember to run msbuild ciBuild.csproj /t:Restore first so the MSBuild extension package is installed from nuget -->
    <Import Project="packages\MSBuild.Extension.Pack.1.9.1\build\net40\MSBuild.Extension.Pack.targets" Condition="Exists('packages\MSBuild.Extension.Pack.1.9.1\build\net40\MSBuild.Extension.Pack.targets')"/>

    <PropertyGroup>
        <!-- Input parameters -->
        <BuildConfiguration>Release</BuildConfiguration>
        <ProjectDirectory>$(MSBuildProjectDirectory)</ProjectDirectory>    

        <!-- Version -->
        <Version Condition="'$(VERSION)' == ''">0.0.0.0</Version>
        <Version Condition="'$(VERSION)' != ''">$(VERSION)</Version>
        <VersionMajor>$(Version.Split('.')[0])</VersionMajor>
        <VersionMinor>$(Version.Split('.')[1])</VersionMinor>
        <VersionPatch>$(Version.Split('.')[2])</VersionPatch>
        <VersionBuild>$(Version.Split('.')[3])</VersionBuild>
        <PackageVersion>$(VersionMajor).$(VersionMinor).$(VersionPatch)</PackageVersion>

        <!--Tools-->
        <NuGet>&quot;$(ProjectDirectory)\_tools\NuGet.exe&quot;</NuGet>
        <NuGetPackageDirectory>$(ProjectDirectory)\_NuGet</NuGetPackageDirectory>
        <DxaFrameworkPackageDirectory>$(NuGetPackageDirectory)\Sdl.Dxa.Framework</DxaFrameworkPackageDirectory>

        <MsTestExe Condition="'$(MsTestExe)'=='' And Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio 14.0\Common7\IDE\MSTest.exe')">$(MSBuildProgramFiles32)\Microsoft Visual Studio 14.0\Common7\IDE\MSTest.exe</MsTestExe>
        <MsTestExe Condition="'$(MsTestExe)'=='' And Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\Common7\IDE\MSTest.exe')">$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\Common7\IDE\MSTest.exe</MsTestExe>
        <MsTestExe Condition="'$(MsTestExe)'=='' And Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio\2017\TestAgent\Common7\IDE\MSTest.exe')">$(MSBuildProgramFiles32)\Microsoft Visual Studio\2017\TestAgent\Common7\IDE\MSTest.exe</MsTestExe>
    </PropertyGroup>

    <!-- ======================================================================================================================= -->
    <!-- You should run msbuild with this target first to make sure all packages are installed before building everything else   -->
    <!-- ======================================================================================================================= -->
    <Target Name="Restore">
        <Message Text="Clearing NuGet cache..."/>
        <Exec Command="$(NuGet) locals all -Clear" />
        <Message Text="Restoring NuGet packages..."/>
        <Exec Command="_tools\RestorePackages DxaFramework.sln" WorkingDirectory="$(ProjectDirectory)" />
    </Target>

    <!-- ==================================================================================  -->
    <Target Name="Build">
        <Message Importance="high" Text="Start build..."/>
        <CallTarget Targets="PrepareBuild"/>
        <CallTarget Targets="RunBuild"/>
        <CallTarget Targets="CreatePackages"/>
    </Target>

    <!-- =============================================================================================================================================  -->
    <Target Name="PrepareBuild">
        <Message Text="Preparing build..." Importance="high" />
        <Message Text="Setting Assembly Info"/>

        <ItemGroup>
        <AssemblyInfoFile Include="$(ProjectDirectory)\CommonAssemblyInfo.cs">
            <Attributes>Normal</Attributes>
        </AssemblyInfoFile>
        </ItemGroup>

        <Message Text="Setting Assembly Info @(AssemblyInfoFile)"/>

        <MSBuild.ExtensionPack.Framework.DateAndTime TaskAction="Get" Format="yyyy">
        <Output TaskParameter="Result" PropertyName="Year"/>
        </MSBuild.ExtensionPack.Framework.DateAndTime>

        <MSBuild.ExtensionPack.FileSystem.File TaskAction="SetAttributes" Files="@(AssemblyInfoFile)"/>

        <MSBuild.ExtensionPack.Framework.AssemblyInfo
        AssemblyInfoFiles="@(AssemblyInfoFile)"
        AssemblyVersion="$(Version)"
        AssemblyFileVersion="$(VersionMajor).$(VersionMinor).$(VersionPatch).$(VersionBuild)"
        AssemblyCopyright="Copyright &#169; 2014-$(Year) SDL Group"
        SkipVersioning="false"
        />

        <Message Text="Restoring NuGet packages for extensions..."/>
        <Exec Command="_tools\RestorePackages DxaFramework.sln" WorkingDirectory="$(ProjectDirectory)" />
    </Target>

    <!-- ==================================================================================  -->
    <Target Name="RunBuild">
        <Message Importance="high" Text="Running build commands..."/>
        <MSBuild Projects="$(ProjectDirectory)\Sdl.Web.Tridion\Sdl.Web.Tridion.csproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU" StopOnFirstFailure="true"/>
        <MSBuild Projects="$(ProjectDirectory)\Site\Sdl.Web.Site.csproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU" StopOnFirstFailure="true"/>
        <!-- Uncomment to enable tests
        <MSBuild Projects="$(ProjectDirectory)\Sdl.Web.Tridion.Tests\Sdl.Web.Tridion.Tests.csproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU" StopOnFirstFailure="true"/>
        -->
    </Target>

    <!-- ==================================================================================  -->
    <Target Name="CreatePackages">
        <Message Importance="high" Text="Creating NuGet packages in '$(NuGetPackageDirectory)' ..."/>
        <Message Text="Package Version: $(PackageVersion)"/>
        <!--Versionize the path to DXA Framework libs in the {package_id}.targets files -->
        <XmlPoke Namespaces="&lt;Namespace Prefix='msb' Uri='http://schemas.microsoft.com/developer/msbuild/2003' /&gt;" Query="//msb:DxaFrameworkLibs/@Include" Value="..\packages\Sdl.Dxa.Framework.Web8.$(PackageVersion)\lib\net462\*.*" XmlInputPath="$(DxaFrameworkPackageDirectory)\Sdl.Dxa.Framework.Web8.targets"/>
        <!-- Create nuget package for Dxa framework -->
        <Exec Command="$(NuGet) pack Sdl.Dxa.Framework.Web8.nuspec -Version $(PackageVersion)" WorkingDirectory="$(DxaFrameworkPackageDirectory)"/>
    </Target>

    <!-- ==================================================================================  -->
    <Target Name="PublishPackages" Condition="'$(NuGetRepositoryUrl)' != ''">
        <Message Importance="high" Text="Publishing NuGet packages to '$(NuGetRepositoryUrl)' ..."/>
        <!-- Publish Dxa framework package -->
        <Exec Command="$(NuGet) push Sdl.Dxa.Framework.Web8.$(PackageVersion).nupkg -Source $(NuGetRepositoryUrl)" WorkingDirectory="$(DxaFrameworkPackageDirectory)"/>
    </Target>

    <!-- ==================================================================================  -->
    <!-- Sandcastle Help File Builder (SHFB)
         Notes:
            1) Install sandcastle from: https://github.com/EWSoftware/SHFB/releases
            2) Setup environment variables:
                    set DXROOT=c:\<install location>\Sandcastle
                    set SHFBROOT=c:\<install location>\Sandcastle Help File Builder
                    set LANGUAGE="%SHFBROOT%\SandcastleBuilderGUI.exe"
    -->
    <Target Name="CreateDocs">
        <Message Importance="high" Text="Creating API documentation..."/>
        <MSBuild Projects="$(ProjectDirectory)\Sdl.Web.Documentation\Sdl.Web.Documentation.shfbproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU;Version=$(PackageVersion)" StopOnFirstFailure="true"/>
    </Target> 

    <!-- ==================================================================================  -->
    <Target Condition="'$(BuildConfiguration)' == 'Release'" Name="Test">
        <Message Text="Running unit tests..."/>
        <Exec Command="packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user &quot;-target:$(MsTestExe)&quot; &quot;-targetargs:/testcontainer:Sdl.Web.Tridion.Tests\bin\$(BuildConfiguration)\Sdl.Web.Tridion.Tests.dll /resultsfile:TestResults.trx&quot; &quot;-filter:+[Sdl.*]* -[*Test*]*&quot; -output:CoverageReports\Coverage.xml&quot;"/>
        <Exec Command="packages\ReportGenerator.2.4.4.0\tools\ReportGenerator.exe &quot;-reports:CoverageReports\Coverage.xml&quot; &quot;-targetdir:CoverageReports&quot;"/>
    </Target>

    <!-- =============================================================================================================================================  -->
    <PropertyGroup>
        <DstFolder>$(ProjectDirectory)\dist</DstFolder>              
    </PropertyGroup>
    <Target Name="Artifacts">
        <Message Text="Generating artifacts ..." Importance="high" />
        <ItemGroup>
            <ConfigFiles Include="$(ProjectDirectory)\Site\*.config;$(ProjectDirectory)\Site\Global.asax"/>
            <ViewFiles Include="$(ProjectDirectory)\Site\Views\**\*"/>
            <AreaFiles Include="$(ProjectDirectory)\Site\Areas\**\*"/>
            <BinFiles Include="$(ProjectDirectory)\Site\bin\*"/>
            <InstallationFiles Include="$(ProjectDirectory)\installation\**\*"/>
            <SrcFilesA Include="$(ProjectDirectory)\CommonAssemblyInfo.cs;$(ProjectDirectory)\DxaWebApp.sln;"/>
            <SrcFilesB Include="$(ProjectDirectory)\Site\**\*" Exclude="$(ProjectDirectory)\Site\bin\**\*;$(ProjectDirectory)\Site\obj\**\*" />
        </ItemGroup>
        <RemoveDir Directories="$(DstFolder)" />

        <Copy DestinationFolder="$(DstFolder)\web\dist" SourceFiles="@(ConfigFiles)"/>
        <Copy DestinationFolder="$(DstFolder)\web\dist\Views\%(RecursiveDir)" SourceFiles="@(ViewFiles)"/>
        <Copy DestinationFolder="$(DstFolder)\web\dist\Areas\%(RecursiveDir)" SourceFiles="@(AreaFiles)"/>
        <Copy DestinationFolder="$(DstFolder)\web\dist\bin\%(RecursiveDir)" SourceFiles="@(BinFiles)"/>
        
        <Copy DestinationFolder="$(DstFolder)\web\%(RecursiveDir)" SourceFiles="@(InstallationFiles)"/>
        <Copy DestinationFolder="$(DstFolder)\web\src\%(RecursiveDir)" SourceFiles="@(SrcFilesA)"/>
        <Copy DestinationFolder="$(DstFolder)\web\src\Site\%(RecursiveDir)" SourceFiles="@(SrcFilesB)"/>

    </Target>     
</Project>